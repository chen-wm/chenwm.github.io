(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{326:function(t,a,s){"use strict";s.r(a);var v=s(4),i=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"问题-1-浏览器重绘与回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#问题-1-浏览器重绘与回流"}},[t._v("#")]),t._v(" "),a("code",[t._v("问题 1：浏览器重绘与回流？")])]),t._v(" "),a("h4",{attrs:{id:"回流-reflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回流-reflow"}},[t._v("#")]),t._v(" "),a("code",[t._v("回流（reflow）：")])]),t._v(" "),a("p",[t._v("1、布局引擎会根据各种样式计算每个盒子在页面上的大小与位置。")]),t._v(" "),a("p",[t._v("2、改变元素的位置和尺寸大小都会引发回流\n"),a("img",{attrs:{src:t.$withBase("/assets/img/browser01.png"),alt:""}}),a("br"),t._v(" "),a("code",[t._v("重绘(Repaint):")]),a("br"),t._v(" 当一个元素的外观发生改变，但没有改变布局,重新把元素外观绘制出来的过程，叫做重绘。表现为某些元素的外观被改变。")]),t._v(" "),a("p",[a("code",[t._v("重绘：")]),a("br"),t._v("1、当计算好盒模型的位置、大小及其他属性后，浏览器根据每个盒子特性进行绘制。")]),t._v(" "),a("p",[t._v("2、"),a("code",[t._v("『回流』必定会发生『重绘』，『重绘』不一定会引发『回流』")]),t._v("。\n"),a("img",{attrs:{src:t.$withBase("/assets/img/browser02.png"),alt:""}})]),t._v(" "),a("h4",{attrs:{id:"如何触发重排和重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何触发重排和重绘"}},[t._v("#")]),t._v(" 如何触发重排和重绘？")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("添加、删除、更新DOM节点")])]),t._v(" "),a("li",[a("p",[t._v("通过display: none隐藏一个DOM节点-触发重排和重绘")])]),t._v(" "),a("li",[a("p",[t._v("通过visibility: hidden隐藏一个DOM节点-只触发重绘")])]),t._v(" "),a("li",[a("p",[t._v("移动或者给页面中的DOM节点添加动画")])]),t._v(" "),a("li",[a("p",[t._v("添加一个样式表，调整样式属性")])]),t._v(" "),a("li",[a("p",[t._v("用户行为，例如调整窗口大小，改变字号，或者滚动。")])])]),t._v(" "),a("h4",{attrs:{id:"如何避免重绘或者重排"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何避免重绘或者重排"}},[t._v("#")]),t._v(" 如何避免重绘或者重排？")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("集中改变样式，不要一条一条地修改 DOM 的样式。")])]),t._v(" "),a("li",[a("p",[t._v("不要把 DOM 结点的属性值放在循环里当成循环里的变量。")])]),t._v(" "),a("li",[a("p",[t._v("尽量只修改position：absolute或fixed元素，对其他元素影响不大")])]),t._v(" "),a("li",[a("p",[t._v("提升为合成层")])])]),t._v(" "),a("ul",[a("li",[t._v("优点：")]),t._v(" "),a("li",[a("ul",[a("li",[t._v("合成层的位图，会交由 GPU 合成，比 CPU 处理要快")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("当需要 repaint 时，只需要 repaint 本身，不会影响到其他的层")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("对于 transform 和 opacity 效果，不会触发 layout 和 paint")])])])]),t._v(" "),a("h4",{attrs:{id:"bfc机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc机制"}},[t._v("#")]),t._v(" BFC机制？")]),t._v(" "),a("p",[a("code",[t._v("即为块级格式化上下文。是 W3C CSS 2.1 规范中的一个概念，它决定了元素如何对其内容进行定位，以及与其他元素的关系和相互作用。 在进行盒子元素布局的时候，BFC提供了一个环境，在这个环境中按照一定规则进行布局不会影响到其它环境中的布局。比如浮动元素会形成BFC，浮动元素内部子元素的主要受该浮动元素影响，两个浮动元素之间是互不影响的。 也就是说，如果一个元素符合了成为BFC的条件，该元素内部元素的布局和定位就和外部元素互不影响(除非内部的盒子建立了新的 BFC)，是一个隔离了的独立容器。（在 CSS3 中，BFC 叫做 Flow Root）")])]),t._v(" "),a("h4",{attrs:{id:"形成-bfc-的条件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#形成-bfc-的条件"}},[t._v("#")]),t._v(" 形成 BFC 的条件")]),t._v(" "),a("ol",[a("li",[t._v("浮动元素，float 除 none 以外的值；")]),t._v(" "),a("li",[t._v("绝对定位元素，position（absolute，fixed）；")]),t._v(" "),a("li",[t._v("display 为以下其中之一的值 inline-blocks，table-cells，table-captions；")]),t._v(" "),a("li",[t._v("overflow 除了 visible 以外的值（hidden，auto，scroll）")])]),t._v(" "),a("h4",{attrs:{id:"bfc常见作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfc常见作用"}},[t._v("#")]),t._v(" BFC常见作用")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("包含浮动元素")]),a("br"),t._v("\n问题案例：高度塌陷问题：在通常情况下父元素的高度会被子元素撑开，而在这里因为其子元素为浮动元素所以父元素发生了高度坍塌，上下边界重合。这时就可以用bfc来清除浮动了。"),a("br"),t._v(" "),a("img",{attrs:{src:t.$withBase("/assets/img/bfc1.png"),alt:""}})]),t._v(" "),a("li",[a("strong",[t._v("不被浮动元素覆盖")]),a("br"),t._v("\n问题案例： div浮动兄弟遮盖问题：由于左侧块级元素发生了浮动，所以和右侧未发生浮动的块级元素不在同一层内，所以会发生div遮挡问题。可以给蓝色块加 overflow: hidden，触发bfc来解决遮挡问题。\n"),a("img",{attrs:{src:t.$withBase("/assets/img/bfc2.png"),alt:""}})]),t._v(" "),a("li",[a("strong",[t._v("BFC 会阻止外边距折叠")]),a("br"),t._v("\n问题案例：margin塌陷问题：在标准文档流中，块级标签之间竖直方向的margin会以大的为准，这就是margin的塌陷现象。可以用overflow：hidden产生bfc来解决。\n"),a("img",{attrs:{src:t.$withBase("/assets/img/bfc3.png"),alt:""}})])])])}),[],!1,null,null,null);a.default=i.exports}}]);